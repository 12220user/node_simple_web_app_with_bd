Использованные технологии
node js & js
    express
    nodemon
    vie
    jqerry
bd
    postgres sql
html
css



база данных
правила и константы

    для records > status 
    0 - не активно
    1 - на модерации
    2 - скрыто
    3 - опубликовано


API DOC

запросы

GET:
    /api/status
    /api/records/all - возвращает все записи из базы данных
    /api/records    - возвращает все записи со статусом опубликовано
    /api/records/:recordID - возвращает json объект с данными о записи с recordID id

POST:
    /api/records/edit - принимает тело {
        id - уникальный id записи
        rulePass  - код доступа для изменнения 
        name - Название статьи
        author - автор статьи
        RecordData - содержание статьи
        //date - дата выхода статьи или изменения
        status - смотреть выше, статус опубликованости статьи
    }


    /api/records/create - принимает тело {
        rulePass  - код доступа для изменнения 
        name - Название статьи
        author - автор статьи
        RecordData - содержание статьи
        status - смотреть выше, статус опубликованости статьи
    }

    /api/records/delite - принимает агргументы 
    {
        rulePass - код доступа
        id - идификатор статьи
    }

    /api/records/filtred - осуществяет ассоциативый поиск и сортировку
    3 режима работы, выбор зависит от первого значения fitler
    filter :    search
                sort
                sortsearch
    {
        filter
        param - в 1-ом отвечает за текст поиска в полях названия, автора, и содержания; 2-ом отвечает за поле, по которому будет выполнена сортировка
        arg - пустой в 2 первый режимах, в третем режиме заменяет второе поля для выполнения сортировки
    }


    /api/passChec - проверяет соответствие паролей на клиенте и сервере
    {
        pass - сам пароль в запросе на сервер
    }
    возвращает значение {
        result - true или false в зависимости от соответствия
    }